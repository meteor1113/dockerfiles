name: Deploy to Docker Hub
on:
  workflow_call:
    inputs:
      context: # ex: "{{defaultContext}}:mysubdir"
        required: true
        type: string
      platforms: # ex: "linux/amd64"
        required: false
        type: string
        default: "linux/amd64"
      images: # ex: "name/app"
        required: true
        type: string
      tags: # ex: "name/app:latest,name/app:1.0.0"
        required: true
        type: string
    secrets:
      username: # ex: ${{ secrets.DOCKERHUB_USERNAME }}
        required: true
      token: # ex: ${{ secrets.DOCKERHUB_TOKEN }}
        required: true

jobs:
  docker_hub:
    runs-on: ubuntu-latest
    steps:
      # -
      #   name: Checkout
      #   uses: actions/checkout@v4
      # -
      #   # Add support for more platforms with QEMU (optional)
      #   # https://github.com/docker/setup-qemu-action
      #   name: Set up QEMU
      #   uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ inputs.images }}
          tags: ${{ inputs.tags }}
            # type=raw,value=${{ inputs.tags }}
            # type=sha
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.username }}
          password: ${{ secrets.token }}
      # -
      #   name: Build and push
      #   uses: docker/build-push-action@v6
      #   with:
      #     context: ${{ inputs.context }}
      #     push: true
      #     platforms: ${{ inputs.platforms }}
      #     tags: ${{ steps.meta.outputs.tags }}
      #     labels: ${{ steps.meta.outputs.labels }}
      #     # tags: |
      #     #   meteor1113/deepin-xfce4:23
      #     #   meteor1113/deepin-xfce4:latest
      # -
      #   name: Build and push image
      #   uses: docker/build-push-action@v6
      #   with:
      #     build-args: |
      #       BASEOS_DIGEST=${{ env.BASEOS_DIGEST }}
      #     context: .
      #     labels: ${{ steps.meta.outputs.labels }}
      #     platforms: ${{ inputs.PLATFORMS }}
      #     provenance: mode=max
      #     push: true
      #     tags: ${{ steps.meta.outputs.tags }}
      #     sbom: true
      # -
      #   name: Update Docker Hub description
      #   uses: peter-evans/dockerhub-description@v4
      #   with:
      #     username: ${{ secrets.USERNAME }}
      #     password: ${{ secrets.TOKEN }}
      #     short-description: ${{ github.event.repository.description }}
